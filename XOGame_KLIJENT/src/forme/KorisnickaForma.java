/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme;

import domen.Potez;
import domen.User;
import java.awt.Point;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

/**
 *
 * @author Jovana
 */
public class KorisnickaForma extends javax.swing.JFrame {
    private User korisnik;
    private boolean kraj = true;
    /**
     * Creates new form KorisnickaForma
     */
    public KorisnickaForma(User korisnik) {
        initComponents();
        setLocationRelativeTo(null);
        this.korisnik=korisnik;
        kontroler.Kontroler.getInstance().setKf(this);
       
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setRowHeight(50);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Klikom na određen red i kolonu upisujete vaš potez u tabelu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if(!kraj){
            JTable tabela= (JTable) evt.getSource();
            Point point = evt.getPoint();
            int red = tabela.rowAtPoint(point);
            int kolona= tabela.columnAtPoint(point);
            if(red<0 || red>2 || kolona<0 || kolona>2){
                JOptionPane.showMessageDialog(null, "greska");
                return;
            }
            System.out.println("red: "+red+" , kolona: "+kolona+"korisnik: "+korisnik);
            Potez p = new Potez(red, kolona, korisnik);
            KlijentskiZahtev kz = new KlijentskiZahtev(p, operacije.Operacije.ODIGRAJ_POTEZ);
            komunikacija.Komunikacija.getInstance().posaljiZahtev(kz);
        }else{
            JOptionPane.showMessageDialog(this, "Igra jos uvek nije pocela ili je zavrsena pa morate da sacekate da admin resetuje igru", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
        }
        
        
    }//GEN-LAST:event_jTable1MouseClicked

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public void odgovorPOTEZ(Potez potez) {
        if(potez==null){
            JOptionPane.showMessageDialog(this, "U polju se vec nalazi vrednost", 
                    "Greska", JOptionPane.ERROR_MESSAGE);
        }else{
            //upisi vrednost u tabelu 
            System.out.println("vracen odg potez "+potez.getRed()+potez.getKolona()+potez.getKorisnik().getOznakaIgraca());
            DefaultTableModel tabela = (DefaultTableModel) jTable1.getModel();
            tabela.setValueAt(potez.getKorisnik().getOznakaIgraca(), potez.getRed(), potez.getKolona());
        }
    }

    public void odgovorPOTEZ_DRUGOG(Potez potez) {
        DefaultTableModel tabela = (DefaultTableModel) jTable1.getModel();
        tabela.setValueAt(potez.getKorisnik().getOznakaIgraca(), potez.getRed(), potez.getKolona());
    }
    public void krajIgre(String poruka) {
        switch (poruka) {
            case "X":
                JOptionPane.showMessageDialog(this, "Igrac X je pobedio", "Kraj igre", JOptionPane.INFORMATION_MESSAGE);
                break;
            case "O":
                JOptionPane.showMessageDialog(this, "Igrac O je pobedio", "Kraj igre", JOptionPane.INFORMATION_MESSAGE);
                break;
            case "nema pobednika":
                JOptionPane.showMessageDialog(this, "Nema pobednika, igra je gotova", "Kraj igre", JOptionPane.INFORMATION_MESSAGE);
                break;
            default:
                return;
        }
        kraj=true;
    }

    public void novaIgra() {
         String[] kolone = {"Kolona 1", "Kolona 2", "Kolona 3"}; 
        DefaultTableModel tabela = new DefaultTableModel(new Object[3][3], kolone);
        jTable1.setModel(tabela);
        kraj=false;
    }

    public void pocetakIgre() {
        kraj=false;
    }
}
